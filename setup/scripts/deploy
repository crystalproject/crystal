#!/bin/bash
#
# Deploy crystal installation
#
# Copyright (C) 2014 RUAG Defence, Patrick Haeusermann <patrick.haeusermann@ruag.com>
#
# This file is part of crystalproject
#
# crystalproject is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
#
# crystalproject is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with crystalproject.  If not, see <http://www.gnu.org/licenses/>.

## GLOBAL VARS
BASE_DIR="${BASH_SOURCE[0]%/*/*}"


if [[ "${BASE_DIR}" == *$(basename "${0}")* ]]; then
  BASE_DIR="${PWD%/*}"
fi

## INCLUDES
source "${BASE_DIR}/includes/base.sh" 2>/dev/null
source "${BASE_DIR}/includes/configuration.sh" 2>/dev/null
source "${BASE_DIR}/includes/hosts.sh" 2>/dev/null


if [[ "${?}" -ne 0 ]]; then
  echo "Script inclusion failed. Please verify that all sources are available" >&2
  exit 1
fi

## LOCAL FUNCS
usage() {
  echo -e \
  "Usage: $(basename "${0}") HOSTNAME\n"
  exit 1
}


copy_install() {
  scp -r "${BASE_DIR}"/* "${USER}"@"${PREFIX%/*}":/tmp/
}

do_remote_install() {
  ssh -t "${USER}"@"${PREFIX%/*}" bash -c "'/tmp/scripts/install ${TYPE} ${host}'"
}

remote_onehost_add() {
  if [[ -z "${1}" ]]; then
    echo "missing parameter" >&2
    return 1
  fi

  local ctrl_host="${1}"

  local ctrl_user=$(grep ^USER "${ctrl_host}" | cut -d '=' -f 2)
  local ctrl_ip=$(grep ^PREFIX "${ctrl_host}" | cut -d '=' -f 2)

  ssh -t "${ctrl_user}"@"${ctrl_ip%/*}" bash -c "'

  if [[ \$(id -u) != 0 ]]; then
    sudo su -c \"onehost create ${host} -i kvm -v kvm -n ovswitch\" oneadmin
  else
    su -c \"onehost create ${host} -i kvm -v kvm -n ovswitch\" oneadmin
  fi
  '"
  if [[ ${?} -ne 0 ]]; then
    return 1
  else
    return 0
  fi

}


## EXEC
config_check

if [[ ${?} -ne 0 ]]; then
  exit 1
fi

if [[ "${#}" -ne 1 ]]; then
  usage
fi

declare host=$(echo "${1}" |tr '[:upper:]' '[:lower:]')

if [[ -f "${BASE_DIR}/config/${host}" ]]; then
  config_parse "${host}"
  copy_install
  do_remote_install
  if [[ "${TYPE}" == "node" ]]; then
    ctrl_host=$(get_ctrl)

    remote_add_hosts "${ctrl_host}"
    if [[ ${?} -ne 0 ]]; then
      echo "an error occured on adding entry to hosts file. please check that manually" >&2
    fi

    remote_onehost_add "${ctrl_host}"
    if [[ ${?} -ne 0 ]]; then
      echo "an error occured on adding host to opennebula. please check that manually" >&2
    fi

  fi

else
  echo "host does not exist. use bootstrap to create it"
  exit 1
fi

